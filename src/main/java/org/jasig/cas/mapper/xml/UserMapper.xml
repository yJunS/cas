<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.jasig.cas.mapper.UserMapper" >
  <resultMap id="userMap" type="org.jasig.cas.thrift.server.User" >
    <result column="username" property="username"  />
    <result column="password" property="password" />
    <result column="email" property="email" />
    <result column="state" property="state"  />
    <result column="mobile" property="mobile"  />
    <result column="nick_name" property="nickName"  />
    <result column="mobile" property="mobile" />
  </resultMap>
  
  <select id="loadUserByUsername" resultMap="userMap">
   select * from t_user where username = #{username}
  </select>
  
  <select id="findUserList" resultMap="userMap">
  	 select * from t_user  where 1= 1
  	 <if test="state != null">
  	  and state =#{state}
  	 </if>
  	 <if test="startTime != null">
  	  and create_time &gt;=#{startTime}
  	 </if>
  	  <if test="endTime != null">
  	  and create_time &lt;=#{endTime}
  	 </if>
  	 <if test="userName != null">
  	  and username like CONCAT('%',#{username},'%')
  	 </if>  order by create_time desc  limit #{page},#{rows}
  </select>
  <select id="findUserCount" resultType="java.lang.Integer">
  	 select count(*) from t_user
  
  </select>
  
  <select id="checkNickName" resultType="Integer">
    select count(*) from t_user where nick_name =#{nickName}
  </select>
  <select id="checkUserName" resultType="Integer">
    select count(*) from t_user where username =#{username}
  </select>
  <select id="checkMobile" resultType="Integer">
    select count(*) from t_user where mobile =#{mobile}
  </select>
  <select id="checkEmail" resultType="Integer">
    select count(*) from t_user where email =#{email}
    
  </select>
  <select id="checkPassword" resultType="Integer">
    select count(*) from t_user where password =#{password}
  </select>
  
  <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
   insert into t_user
   (
   `username`,
	`password`,
	`email`,
	`state`,
	`nick_name`,
	`create_time`,
	`update_time`,
	`mobile`
   )
   VALUES(
     #{username},
     #{password},
     #{email},
     #{state},
     #{nickName},
     now(),
     now(),
     #{mobile}
   )
  </insert>
  
  <update id="editUser">
    update t_user
    <set>
    
      <if test="nickName != null ">
         nick_name = #{nickName},
      </if>
      <if test="password != null ">
         password = #{password},
      </if>
      <if test="email != null ">
         email = #{email},
      </if>
         age = #{age},
         sex = #{sex},
         <if test="address != null">
         
           address = #{address},
         </if>
         state = #{state},
         update_time=now()
    </set>
    
   <where>
       username = #{username}
   </where>
  
  </update>
  
  <select id="findUserByUserName" resultMap="userMap">
  	select * from t_user  where username = #{username}
  </select>
</mapper>